diff --git a/configure.ac b/configure.ac
index 707f587..a1efc57 100644
--- a/configure.ac
+++ b/configure.ac
@@ -23,7 +23,7 @@ AC_SUBST(lt_major)
 AC_SUBST(lt_revision)
 AC_SUBST(lt_age)

-all_drivers="upekts upektc upeksonly vcom5s uru4000 fdu2000 aes1610 aes1660 aes2501 aes2550 aes2660 aes3500 aes4000 vfs101 vfs301 vfs5011 upektc_img etes603 vfs0050"
+all_drivers="upekts upektc upeksonly vcom5s uru4000 fdu2000 aes1610 aes1660 aes2501 aes2550 aes2660 aes3500 aes4000 vfs101 vfs301 vfs5011 upektc_img etes603 vfs0050 vcs"

 require_imaging='no'
 require_aeslib='no'
@@ -48,6 +48,7 @@ enable_vfs301='no'
 enable_upektc_img='no'
 enable_etes603='no'
 enable_vfs0050='no'
+enable_vcs='no'

 AC_ARG_WITH([drivers],[AS_HELP_STRING([--with-drivers],
 	[List of drivers to enable])],
@@ -150,6 +151,10 @@ for driver in `echo ${drivers} | sed -e 's/,/ /g' -e 's/,$//g'`; do
 			AC_DEFINE([ENABLE_ETES603], [], [Build EgisTec ES603 driver])
 			enable_etes603="yes"
 		;;
+		vcs)
+			AC_DEFINE([ENABLE_VCS], [], [Build Validity Sensors driver])
+			enable_vcs="yes"
+		;;
 	esac
 done

@@ -175,6 +180,7 @@ AM_CONDITIONAL([ENABLE_VFS301], [test "$enable_vfs301" = "yes"])
 AM_CONDITIONAL([ENABLE_UPEKTC_IMG], [test "$enable_upektc_img" = "yes"])
 AM_CONDITIONAL([ENABLE_ETES603], [test "$enable_etes603" = "yes"])
 AM_CONDITIONAL([ENABLE_VFS0050], [test "$enable_vfs0050" = "yes"])
+AM_CONDITIONAL([ENABLE_VCS], [test "$enable_vcs" = "yes"])


 PKG_CHECK_MODULES(LIBUSB, [libusb-1.0 >= 0.9.1])
@@ -396,6 +402,11 @@ if test x$enable_etes603 != xno ; then
 else
 	AC_MSG_NOTICE([   etes603 driver disabled])
 fi
+if test x$enable_vcs != xno ; then
+	AC_MSG_NOTICE([** validity sensors driver enabled])
+else
+	AC_MSG_NOTICE([   validity sensors driver disabled])
+fi
 if test x$require_aeslib != xno ; then
 	AC_MSG_NOTICE([** aeslib helper functions enabled])
 else
diff --git a/libfprint/Makefile.am b/libfprint/Makefile.am
index ea6e678..bf903a9 100644
--- a/libfprint/Makefile.am
+++ b/libfprint/Makefile.am
@@ -21,6 +21,9 @@ VFS301_SRC = drivers/vfs301.c drivers/vfs301_proto.c  drivers/vfs301_proto.h dri
 UPEKTC_IMG_SRC = drivers/upektc_img.c drivers/upektc_img.h
 ETES603_SRC = drivers/etes603.c
 VFS0050_SRC = drivers/vfs0050.c drivers/vfs0050.h
+VCS_SRCS    = drivers/validity/vfsDriver.c \
+	drivers/validity/vfsDriver.h \
+	drivers/validity/vfsWrapper.h

 EXTRA_DIST = \
 	$(UPEKE2_SRC)		\
@@ -36,6 +39,7 @@ EXTRA_DIST = \
 	$(AES3500_SRC)		\
 	$(AES4000_SRC)		\
 	$(FDU2000_SRC)		\
+	$(VCS_SRCS)			\
 	$(VCOM5S_SRC)		\
 	$(VFS101_SRC)		\
 	$(VFS301_SRC)		\
@@ -184,6 +188,10 @@ if ENABLE_ETES603
 DRIVER_SRC += $(ETES603_SRC)
 endif

+if ENABLE_VCS
+DRIVER_SRC += $(VCS_SRCS)
+endif
+
 if REQUIRE_PIXMAN
 OTHER_SRC += pixman.c
 libfprint_la_CFLAGS += $(IMAGING_CFLAGS)
diff --git a/libfprint/core.c b/libfprint/core.c
index 2ae7649..0f7892d 100644
--- a/libfprint/core.c
+++ b/libfprint/core.c
@@ -402,6 +402,9 @@ static struct fp_img_driver * const img_drivers[] = {
 	&fdu2000_driver,
 #endif
 	*/
+#ifdef ENABLE_VCS
+	&validity_driver,
+#endif
 };

 static void register_drivers(void)
diff --git a/libfprint/fp_internal.h b/libfprint/fp_internal.h
index 2324b27..2cf009a 100644
--- a/libfprint/fp_internal.h
+++ b/libfprint/fp_internal.h
@@ -233,6 +233,9 @@ enum fp_print_data_type fpi_driver_get_data_type(struct fp_driver *drv);
 /* flags for fp_img_driver.flags */
 #define FP_IMGDRV_SUPPORTS_UNCONDITIONAL_CAPTURE (1 << 0)

+#define BOZORTH3_DEFAULT_THRESHOLD 40
+#define MIN_ACCEPTABLE_MINUTIAE 10
+
 struct fp_img_driver {
 	struct fp_driver driver;
 	uint16_t flags;
@@ -305,6 +308,9 @@ extern struct fp_img_driver upektc_img_driver;
 #ifdef ENABLE_ETES603
 extern struct fp_img_driver etes603_driver;
 #endif
+#ifdef ENABLE_VCS
+extern struct fp_img_driver validity_driver;
+#endif

 extern libusb_context *fpi_usb_ctx;
 extern GSList *opened_devices;
