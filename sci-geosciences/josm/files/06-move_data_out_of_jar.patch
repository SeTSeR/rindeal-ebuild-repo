Description: Move sharable data out of josm.jar.
Author: David Paleino <dapal@debian.org>
Author: Paul Hartmann <phaaurlt@googlemail.com>
Bug-Debian: https://bugs.debian.org/698608
Forwarded: not-needed

--- a/build.xml
+++ b/build.xml
@@ -167,9 +167,9 @@ Debian-Release: ${debian.version}
                 <attribute name="Add-Exports" value="java.base/sun.security.util java.base/sun.security.x509 java.desktop/com.apple.eawt java.desktop/com.sun.imageio.spi javafx.graphics/com.sun.javafx.application jdk.deploy/com.sun.deploy.config" />
                 <attribute name="Add-Opens" value="java.base/java.lang java.base/jdk.internal.loader java.desktop/javax.imageio.spi java.desktop/javax.swing.text.html java.prefs/java.util.prefs" />
             </manifest>
-            <zipfileset dir="images" prefix="images"/>
-            <zipfileset dir="data" prefix="data"/>
-            <zipfileset dir="styles" prefix="styles"/>
+            <!--<zipfileset dir="images" prefix="images"/>-->
+            <!--<zipfileset dir="data" prefix="data"/>-->
+            <!--<zipfileset dir="styles" prefix="styles"/>-->
         </jar>
     </target>
     <!-- Mac OS X target -->
--- a/src/org/openstreetmap/josm/tools/I18n.java
+++ b/src/org/openstreetmap/josm/tools/I18n.java
@@ -9,6 +9,7 @@ import java.io.InputStream;
 import java.lang.annotation.Retention;
 import java.lang.annotation.RetentionPolicy;
 import java.net.URL;
+import java.net.MalformedURLException;
 import java.nio.charset.StandardCharsets;
 import java.text.MessageFormat;
 import java.util.ArrayList;
@@ -268,7 +269,11 @@ public final class I18n {
     }
 
     private static URL getTranslationFile(String lang) {
-        return I18n.class.getResource("/data/"+lang.replace('@', '-')+".lang");
+        try {
+            return new URL("file:///usr/share/josm/data/"+lang.replace('@', '-')+".lang");
+        } catch (MalformedURLException ex) {
+            return null;
+        }
     }
 
     /**
--- a/src/org/openstreetmap/josm/io/CachedFile.java
+++ b/src/org/openstreetmap/josm/io/CachedFile.java
@@ -208,11 +208,17 @@ public class CachedFile implements Close
         File file = getFile();
         if (file == null) {
             if (name != null && name.startsWith("resource://")) {
-                InputStream is = getClass().getResourceAsStream(
-                        name.substring("resource:/".length()));
-                if (is == null)
-                    throw new IOException(tr("Failed to open input stream for resource ''{0}''", name));
-                return is;
+                String path = name.substring("resource://".length());
+                File fileRes = new File("/usr/share/josm/" + path);
+                if (fileRes.exists()) {
+                    file = fileRes;
+                } else {
+                    InputStream is = getClass().getResourceAsStream(
+                            name.substring("resource:/".length()));
+                    if (is == null)
+                        throw new IOException(tr("Failed to open input stream for resource ''{0}''", name));
+                    return is;
+                }
             } else {
                 throw new IOException("No file found for: "+name);
             }
